#!/bin/bash

msg="usage: $0 theoryhtm|neelam|tapuz [testing]"
if [ "$#" -lt "1" ]; then
    echo $msg
    exit 1
fi

if [ "$2" == "testing" ]; then
    args="-t 10 -rq 0 -ma new -mp none"
    trials="0"
    testing=1
else
    args="-t 1000 -rq 0 -ma new -mp none -p"
    trials="0 1 2 3 4"
    testing=0
fi

cd ..

if [ "$1" == "theoryhtm" ]; then
    threads="1 2 3 4 5 6 7 8"
    pathsettings=$'-1 -1 3path\n-1 20 3path\n10 10 3path\n20 -1 tle\n20 20 3path'
    opts="bind0o2"
    mrs="debra"
    if [ "$2" != "testing" ]; then make ; fi
elif [ "$1" == "neelam" ]; then
    threads="1 9 18 27 36 45 54 63 72"
    pathsettings=$'-1 -1 3path\n-1 20 3path\n20 -1 tle\n20 20 3path'
    opts="bind0o2 bind3o2"
    mrs="debra"
    if [ "$2" != "testing" ]; then make neelam ; fi
elif [ "$1" == "tapuz" ]; then
    threads="1 6 12 18 24 30 36 42 48"
    pathsettings=$'-1 -1 3path\n-1 20 3path\n10 10 3path\n20 -1 tle\n20 20 3path'
    opts="bind0o2"
    mrs="debra none"
    if [ "$2" != "testing" ]; then make ; fi
else
    echo $msg
    exit 1
fi

mkdir output
rm -r -f output/*.out

bad=0
cnt1=0
cnt2=0

for mode in 0 1 ; do
while read ds i d k rqsize ; do
for thr in $threads ; do
    if [ "$rqsize" -eq "0" ]; then
        workthr=$thr
        rqthr=0
    else
        workthr=`expr $thr - 1`
        rqthr=1
    fi
    for mr in $mrs ; do
    for opt in $opts ; do
    for trial in $trials ; do
    while read htmfast htmslow method ; do
        ## edit the following 4 lines to change parameters
        postargs="-mr $mr -k $k -i $i -d $d -rqsize $rqsize -nwork $workthr -nrq $rqthr -htmfast $htmfast -htmslow $htmslow"
        postargs_literal='-mr $mr -k $k -i $i -d $d -rqsize $rqsize -nwork $workthr -nrq $rqthr -htmfast $htmfast -htmslow $htmslow'
        filename="exp_trial_${trial}_ds_${ds}-${method}-${opt}"
        filename_literal='exp_trial_${trial}_ds_${ds}-${method}-${opt}'

        ## the following lines need not be edited
        filename=output/${filename}_`echo $args $postargs | tr " " "_"`.out
        cmd="./exp-${ds}-${method}-${opt}.out $args $postargs"

        if [ "$mode" == "0" ]; then
            cnt1=`expr $cnt1 + 1`
            echo "Counting: step $cnt1"
        else
            cnt2=`expr $cnt2 + 1`
            echo "step $cnt2 / $cnt1: ${filename}"
            echo $cmd > $filename
            perf stat -e cpu/event=0xc9,umask=0x2,name=commit/ \
                    -e cpu/event=0x54,umask=0x1,name=conflict/ \
                    -e cpu/event=0xc9,umask=0x8,name=memory_event/ \
                    -e cpu/event=0xc9,umask=0x20,name=unfriendly_instruction/ \
                    $cmd >> $filename 2>&1

            ## do sanity check
            throughput=`cat $filename | grep "incl."`
            echo $throughput
            throughput=`echo $throughput | cut -d":" -f2 | tr -d " "`
            if [ "$throughput" == "" ]; then
                if [ "$testing" -eq "1" ]; then
                    echo "Some trial(s) had no throughput line!"
                    exit 1
                fi
                bad=1
            fi
        fi
    done <<< "$pathsettings"
    done
    done
    done
done
done < scripts/explist
done

if [ "$bad" -eq "1" ]; then
    echo "Some trial(s) had no throughput line!"
fi

## the following lines need not be edited
args_literal=`echo $args | tr " " ","`
postargs_literal=`echo $postargs_literal | tr " " ","`
filename_literal=`echo $filename_literal | tr "_" ","`
header=$filename_literal,$args_literal,$postargs_literal
echo "$header" > output/header
